import type { Metadata } from "next";
import { NextIntlClientProvider, hasLocale } from "next-intl";

import { Dosis } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/store/AuthContext";
import { queryClient } from "@/lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "react-hot-toast";
import Navbar from "@/components/Navigation/Navbar";
import Footer from "@/components/footer/footer";
import CartContextProvider from "@/store/CartContext";
import { AuthModalProvider } from "@/store/AuthModalContext";
import { SearchProvider } from "@/store/SearchContext";
import ClientLayoutPart from "./ClientLayoutPart";

import { routing } from "@/i18n/routing";
import { getMessages } from "next-intl/server";

const dosis = Dosis({
  variable: "--font-dosis",
  subsets: ["latin"],
  display: "swap",
  weight: ["400", "500", "700"], // add weights you need
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Note: This is the layout inside the `[locale]` segment
export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const { locale } = await params;

  // Validate locale param
  if (!hasLocale(routing.locales, locale)) {
    // If locale is invalid, show 404
    // You can also redirect or fallback
    throw new Error("Invalid locale");
  }

  // Load locale messages dynamically
  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body className={`${dosis.variable} antialiased`}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <QueryClientProvider client={queryClient}>
            <AuthModalProvider>
              <SearchProvider>
                <AuthProvider>
                  <CartContextProvider>
                    <Toaster />
                    <div id="root-modal"></div>
                    <ClientLayoutPart />
                    <Navbar />
                    {children}
                    <Footer />
                  </CartContextProvider>
                </AuthProvider>
              </SearchProvider>
            </AuthModalProvider>
          </QueryClientProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
